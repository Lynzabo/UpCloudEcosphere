###
#
#	上云系统运行常量配置(热拔)
#

#   拷贝缓存区大小(byte为单位)
#   type:unsigned long
#	可选填，默认为1024
upCloud.source.cache_size=1024


##  FTP协议传输配置

#
#   上传常量配置

#   上传文件大小限制(Mb为单位)
#   type:unsigned long
#   注意:值以Mb换算，值中不能存在表达式
#   可选填，默认为2097152M(2T),下面的指定为1G
upCloud.ftp.upload.task_size=1024

#   异步上传同时进行的任务数上限
#   type:unsigned long
upCloud.ftp.upload.asyn_task_num=5

#   异步上传队列集合总带宽控制
#   type:bool
#   false代表不控制上传总带宽,true代表控制上传总带宽,对应下面总带宽上限/下限值的设定
#   可选填，默认为false
upCloud.ftp.upload.total_bandwidth=false

#   异步上传队列总带宽下限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.ftp.upload.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb
upCloud.ftp.upload.bandwidth.lower_limit=0

#   异步上传队列总带宽上限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.ftp.upload.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb,代表无上限
upCloud.ftp.upload.bandwidth.upper_limit=0

#   上传多文件优先级策略
#   type:string
#       none代表无优先级策略,
#       small_must代表小文件后来先抢先传,
#       small_jump_queue代表小文件来后，在多任务上传队列中,找到合适位置插入准备上传
#       big_must代表大文件后来先抢先传,
#       big_jump_queue代表大文件来后，在多任务上传队列中,找到合适位置插入准备上传
#       manual代表手动指示(调用Ftp上传接口在最后参数指定文件优先上传,最后指定上传的优先级最高,会先传)
#   可选填，大小写不敏感，默认是none
upCloud.ftp.upload.asyn_priority=none

#   下面配置在任务正在进行期间热拔不生效，对新任务热拔有效
#   上传单任务线程数目
#   type:unsigned int
upCloud.ftp.upload.task_thread_num=5

#   上传任务文件块大小(Kb为单位,文件块大小直接决定了块的数目)
#   type:unsigned long
#   注意:值以Kb换算，值中不能存在表达式
upCloud.ftp.upload.task_block_size=128

#
#   下载常量配置

#   下载文件大小限制(Mb为单位)
#   type:unsigned long
#   注意:值以Mb换算，值中不能存在表达式
#   可选填，默认为2097152M(2T),下面的指定为1G
upCloud.ftp.download.task_size=1024
#   下载文件md5校验
#   type:bool
#   可选填，大小写不敏感，默认是true
upCloud.ftp.download.md5=true
#   异步下载同时进行的任务数上限
#   type:unsigned int
upCloud.ftp.download.asyn_task_num=5

#   异步下载队列集合总带宽控制
#   type:bool
#   false代表不控制下载总带宽,true代表控制下载总带宽,对应下面总带宽上限/下限值的设定
#   可选填，默认为false
upCloud.ftp.download.total_bandwidth=false

#   异步下载队列总带宽下限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.ftp.download.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb
upCloud.ftp.download.bandwidth.lower_limit=0

#   异步下载队列总带宽上限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.ftp.download.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb,代表无上限
upCloud.ftp.download.bandwidth.upper_limit=0

#   下载多文件优先级策略
#   type:string
#       none代表无优先级策略,
#       small_must代表小文件后来先抢先下载,
#       small_jump_queue代表小文件来后，在多任务下载队列中,找到合适位置插入准备下载
#       big_must代表大文件后来先抢先下载,
#       big_jump_queue代表大文件来后，在多任务下载队列中,找到合适位置插入准备下载
#       manual代表手动指示(调用Ftp下载接口在最后参数指定文件优先下载,最后指定下载的优先级最高,会先下载)
#   可选填，大小写不敏感，默认是none
upCloud.ftp.download.asyn_priority=none
#   下面配置在任务正在进行期间热拔不生效，对新任务热拔有效
#   下载单任务线程数目
#   type:unsigned int
upCloud.ftp.download.task_thread_num=5
#   下载任务文件块大小(Kb为单位,文件块大小直接决定了块的数目)
#   type:unsigned long
#   注意:值以Kb换算，值中不能存在表达式
upCloud.ftp.download.task_block_size=128


##  Http/Https协议传输配置

#
#   上传常量配置

#   上传文件大小限制(Mb为单位)
#   type:unsigned long
#   注意:值以Mb换算，值中不能存在表达式
#   可选填，默认为2097152M(2T),下面的指定为1G
upCloud.http.upload.task_size=1024

#   异步上传同时进行的任务数上限
#   type:unsigned long
upCloud.http.upload.asyn_task_num=5

#   异步上传队列集合总带宽控制
#   type:bool
#   false代表不控制上传总带宽,true代表控制上传总带宽,对应下面总带宽上限/下限值的设定
#   可选填，默认为false
upCloud.http.upload.total_bandwidth=false

#   异步上传队列总带宽下限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.http.upload.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb
upCloud.http.upload.bandwidth.lower_limit=0

#   异步上传队列总带宽上限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.http.upload.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb,代表无上限
upCloud.http.upload.bandwidth.upper_limit=0

#   上传多文件优先级策略
#   type:string
#       none代表无优先级策略,
#       small_must代表小文件后来先抢先传,
#       small_jump_queue代表小文件来后，在多任务上传队列中,找到合适位置插入准备上传
#       big_must代表大文件后来先抢先传,
#       big_jump_queue代表大文件来后，在多任务上传队列中,找到合适位置插入准备上传
#       manual代表手动指示(调用http上传接口在最后参数指定文件优先上传,最后指定上传的优先级最高,会先传)
#   可选填，大小写不敏感，默认是none
upCloud.http.upload.asyn_priority=none

#   下面配置在任务正在进行期间热拔不生效，对新任务热拔有效
#   上传单任务线程数目
#   type:unsigned int
upCloud.http.upload.task_thread_num=5

#   上传任务文件块大小(Kb为单位,文件块大小直接决定了块的数目)
#   type:unsigned long
#   注意:值以Kb换算，值中不能存在表达式
upCloud.http.upload.task_block_size=128

#
#   下载常量配置

#   下载文件大小限制(Mb为单位)
#   type:unsigned long
#   注意:值以Mb换算，值中不能存在表达式
#   可选填，默认为2097152M(2T),下面的指定为1G
upCloud.http.download.task_size=1024
#   下载文件md5校验
#   type:bool
#   可选填，大小写不敏感，默认是true
upCloud.http.download.md5=true
#   异步下载同时进行的任务数上限
#   type:unsigned int
upCloud.http.download.asyn_task_num=5

#   异步下载队列集合总带宽控制
#   type:bool
#   false代表不控制下载总带宽,true代表控制下载总带宽,对应下面总带宽上限/下限值的设定
#   可选填，默认为false
upCloud.http.download.total_bandwidth=false

#   异步下载队列总带宽下限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.http.download.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb
upCloud.http.download.bandwidth.lower_limit=0

#   异步下载队列总带宽上限控制(Kb为单位)
#   type:unsigned long
#   当upCloud.http.download.total_bandwidth设置为true时候,当前设定有效
#   可选填,默认为0Kb,代表无上限
upCloud.http.download.bandwidth.upper_limit=0

#   下载多文件优先级策略
#   type:string
#       none代表无优先级策略,
#       small_must代表小文件后来先抢先下载,
#       small_jump_queue代表小文件来后，在多任务下载队列中,找到合适位置插入准备下载
#       big_must代表大文件后来先抢先下载,
#       big_jump_queue代表大文件来后，在多任务下载队列中,找到合适位置插入准备下载
#       manual代表手动指示(调用http下载接口在最后参数指定文件优先下载,最后指定下载的优先级最高,会先下载)
#   可选填，大小写不敏感，默认是none
upCloud.http.download.asyn_priority=none
#   下面配置在任务正在进行期间热拔不生效，对新任务热拔有效
#   下载单任务线程数目
#   type:unsigned int
upCloud.http.download.task_thread_num=5
#   下载任务文件块大小(Kb为单位,文件块大小直接决定了块的数目)
#   type:unsigned long
#   注意:值以Kb换算，值中不能存在表达式
upCloud.http.download.task_block_size=128

###
